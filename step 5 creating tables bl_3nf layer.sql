
CREATE OR REPLACE PROCEDURE bl_cl.create_tables_bl_3nf_layer()
LANGUAGE plpgsql
AS
$$
DECLARE

    start_time TIMESTAMP;
    end_time TIMESTAMP;
    run_time INTERVAL;
	user_name  text;
	message text;
	schema_name text;
	table_name text;
BEGIN
   user_name := current_user;
	message := 'creating tables bl_3nf layer completed';
	schema_name := 'bl_3nf';
	table_name := 'creating_tables';
    start_time := CURRENT_TIMESTAMP;

  CREATE SEQUENCE IF NOT EXISTS bl_3nf.payment_methods_seq;

  CREATE TABLE IF NOT EXISTS bl_3nf.CE_PAYMENT_METHODS (
    PAYMENT_METHOD_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.payment_methods_seq'),
    PAYMENT_METHOD_SRC_ID BIGINT,
    PAYMENT_METHOD_NAME VARCHAR(255) NOT NULL,
    SOURCE_SYSTEM VARCHAR(255) NOT NULL,
    SOURCE_ENTITY VARCHAR(255) NOT NULL,
    INSERT_DT DATE NOT NULL,
    UPDATE_DT DATE NOT NULL
  );
 CREATE INDEX idx_ce_payment_methods_src_id ON bl_3nf.CE_PAYMENT_METHODS (PAYMENT_METHOD_SRC_ID);


  CREATE SEQUENCE IF NOT EXISTS bl_3nf.ONLINE_ADD_CHANELS_seq;

  CREATE TABLE IF NOT EXISTS BL_3NF.CE_ONLINE_ADD_CHANELS (
    ONLINE_ADD_CHANNEL_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.ONLINE_ADD_CHANELS_seq'),
    ONLINE_ADD_CHANNEL_SRC_ID BIGINT,
    ONLINE_ADD_CHANNEL_NAME VARCHAR(255) NOT NULL,
    SOURCE_SYSTEM VARCHAR(255) NOT NULL,
    SOURCE_ENTITY VARCHAR(255) NOT NULL,
    INSERT_DT DATE NOT NULL,
    UPDATE_DT DATE NOT NULL
  );
CREATE INDEX idx_ce_online_add_channels_src_id ON bl_3nf.CE_ONLINE_ADD_CHANELS (ONLINE_ADD_CHANNEL_SRC_ID);


CREATE SEQUENCE IF NOT EXISTS bl_3nf.SHIPPING_METHOD_seq;

  CREATE TABLE IF NOT EXISTS BL_3NF.CE_SHIPPING_METHOD (
  SHIPPING_METHOD_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.SHIPPING_METHOD_seq'),
  SHIPPING_METHOD_SRC_ID int,
  SHIPPING_METHOD_NAME VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
);

CREATE INDEX idx_ce_shipping_method_src_id ON bl_3nf.CE_SHIPPING_METHOD (SHIPPING_METHOD_SRC_ID);
 
  CREATE SEQUENCE IF NOT EXISTS bl_3nf.WEBS_seq;

  CREATE TABLE IF NOT EXISTS BL_3NF.CE_WEBS (
  WEB_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.WEBS_seq'),
  WEB_SRC_ID int NOT NULL,
  WEB_NAME VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
);
CREATE INDEX idx_ce_webs_src_id ON bl_3nf.CE_WEBS (WEB_SRC_ID);

  
CREATE SEQUENCE IF NOT EXISTS bl_3nf.CUSTOMERS_seq;

  CREATE TABLE IF NOT EXISTS BL_3NF.CE_CUSTOMERS (
  CUSTOMER_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.CUSTOMERS_seq'),
  CUSTOMER_SRC_ID int NOT NULL,
  CUSTOMER_FIRST_NAME VARCHAR(255) NOT NULL,
  CUSTOMER_LAST_NAME VARCHAR(255) NOT NULL,
  USER_NAME VARCHAR(255) NOT NULL,
  PHONE VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
);
CREATE INDEX idx_ce_customers_src_id ON bl_3nf.CE_CUSTOMERS (CUSTOMER_SRC_ID);


  
CREATE SEQUENCE IF NOT EXISTS bl_3nf.FORMATS_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_FORMATS (
  FORMAT_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.FORMATS_seq'),
  FORMAT_SRC_ID int NOT NULL,
  FORMAT_NAME VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
); 

CREATE INDEX idx_ce_formats_src_id ON bl_3nf.CE_FORMATS (FORMAT_SRC_ID);

CREATE SEQUENCE IF NOT EXISTS bl_3nf.COUNTRIES_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_COUNTRIES (
  COUNTRY_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.COUNTRIES_seq'),
  COUNTRY_SRC_ID int NOT NULL,
  COUNTRY_NAME VARCHAR(255) NOT NULL,
  COUNTRY_CODE VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
); 
CREATE INDEX idx_ce_countries_src_id ON bl_3nf.CE_COUNTRIES (COUNTRY_SRC_ID);


CREATE SEQUENCE IF NOT EXISTS bl_3nf.AUTHORS_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_AUTHORS (
  AUTHOR_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.AUTHORS_seq'),
  AUTHOR_SRC_ID int NOT NULL,
  AUTHOR_FIRST_NAME VARCHAR(255) NOT NULL,
  AUTHOR_LAST_NAME VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
); 

CREATE INDEX idx_ce_authors_src_id ON bl_3nf.CE_AUTHORS (AUTHOR_SRC_ID);

CREATE SEQUENCE IF NOT EXISTS bl_3nf.GENRES_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_GENRES (
  GENRE_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.GENRES_seq'),
  GENRE_SRC_ID int NOT NULL,
  GENRE_NAME VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
); 
CREATE INDEX idx_ce_genres_src_id ON bl_3nf.CE_GENRES (GENRE_SRC_ID);


CREATE SEQUENCE IF NOT EXISTS bl_3nf.BOOKS_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_BOOKS (
  BOOK_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.BOOKS_seq'),
  BOOK_SRC_ID int NOT NULL,
  BOOK_NAME text NOT NULL,
  GENRE_SRC_ID INTEGER NOT NULL,
  AUTHOR_SRC_ID INTEGER NOT NULL,
  FORMAT_SRC_ID INTEGER NOT NULL,
  BOOKS_PRICE NUMERIC(10,2) NOT NULL,
  SOURCE_SYSTEM text NOT NULL,
  SOURCE_ENTITY text NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL  
); 
CREATE INDEX idx_ce_books_src_id ON bl_3nf.CE_BOOKS (BOOK_SRC_ID);

  
CREATE SEQUENCE IF NOT EXISTS bl_3nf.STORES_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_STORES (
  STORE_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.STORES_seq'),
  STORE_SRC_ID int NOT NULL,
  STORE_NAME VARCHAR(255) NOT NULL,
  ADDRESS_SRC_ID INT NOT NULL,
  PHONE VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL

);
CREATE INDEX idx_ce_stores_src_id ON bl_3nf.CE_STORES (STORE_SRC_ID);


   
CREATE SEQUENCE IF NOT EXISTS bl_3nf.CITIES_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_CITIES (
  CITY_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.CITIES_seq'),
  CITY_SRC_ID int NOT NULL,
  CITY_NAME VARCHAR(255) NOT NULL,
  COUNTRY_SRC_ID INTEGER NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
);

   CREATE INDEX idx_ce_cities_src_id ON bl_3nf.CE_CITIES (CITY_SRC_ID);

CREATE SEQUENCE IF NOT EXISTS bl_3nf.STREETS_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_STREETS (
  STREET_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.STREETS_seq'),
  STREET_SRC_ID int NOT NULL,
  STREET_NAME VARCHAR(255) NOT NULL,
  CITY_SRC_ID INTEGER NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
);

CREATE INDEX idx_ce_streets_src_id ON bl_3nf.CE_STREETS (STREET_SRC_ID);


CREATE SEQUENCE IF NOT EXISTS bl_3nf.ADDRESSES_SCD2_seq;
  
  CREATE TABLE IF NOT EXISTS BL_3NF.CE_ADDRESSES_SCD2 (
  ADDRESS_SURR_ID BIGINT PRIMARY KEY DEFAULT nextval('bl_3nf.ADDRESSES_SCD2_seq'),
  ADDRESS_SRC_ID int NOT NULL,
  ADDRESS_NAME VARCHAR(255) NOT NULL,
  STREET_SRC_ID INTEGER NOT NULL,
  CITY_SRC_ID INTEGER NOT NULL,
  COUNTRY_SRC_ID INTEGER NOT NULL,
  SOURCE_SYSTEM VARCHAR(255) NOT NULL,
  SOURCE_ENTITY VARCHAR(255) NOT NULL,
  START_DT DATE NOT NULL,
  END_DT DATE NOT NULL,
  IS_ACTIVE BOOLEAN NOT NULL,
  INSERT_DT DATE NOT NULL,
  UPDATE_DT DATE NOT NULL
);
CREATE INDEX idx_ce_addresses_scd2_src_id ON bl_3nf.CE_ADDRESSES_SCD2 (ADDRESS_SRC_ID);


CREATE TABLE IF NOT EXISTS BL_3NF.CE_SALES (
    
    TIME_ID DATE,
    STORE_SRC_ID INT,
    ADDRESS_SRC_ID INT,
    BOOK_SRC_ID INT,
    GENRE_SRC_ID INTEGER,
    AUTHOR_SRC_ID INTEGER,
    FORMAT_SRC_ID INTEGER,
    BOOKS_PRICE NUMERIC(10, 2),
    AMOUNT INTEGER,
    TOTAL_SALES_AMOUNT DECIMAL(10, 2),
    COUNTRY_SRC_ID INTEGER,
    CUSTOMER_SRC_ID INT,
    PAYMENT_METHOD_SRC_ID BIGINT,
    ONLINE_ADD_CHANNEL_SRC_ID BIGINT,
    SHIPPING_METHOD_SRC_ID INT,
    WEB_SRC_ID INT 
) PARTITION BY RANGE (time_id);
	CREATE TABLE ce_sales_1900_01 PARTITION OF bl_3nf.ce_sales
    FOR VALUES FROM ('1900-01-01') TO ('1900-02-01');
	CREATE INDEX idx_ce_sales_time_id ON bl_3nf.CE_SALES (TIME_ID);

  	end_time := CURRENT_TIMESTAMP;
    run_time := end_time - start_time;

BEGIN 
CALL bl_cl.log_event(user_name, message, schema_name, table_name, start_time, end_time, run_time);

EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'Error occurred during loading: %', SQLERRM;
        -- Log the event before re-raising the exception
        CALL bl_cl.log_event(user_name, SQLERRM, schema_name, table_name, start_time, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP - start_time);
        RAISE;
END;
END;
$$;


call bl_cl.create_tables_bl_3nf_layer()